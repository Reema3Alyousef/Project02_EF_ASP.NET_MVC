// <auto-generated />
using Event_Hall.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Event_Hall.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210604174516_editedEventModel")]
    partial class editedEventModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Event_Hall.Models.AttendeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Field")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Attendees");

                    b.HasData(
                        new
                        {
                            Id = 13,
                            Email = "reema@gmail.com",
                            EventId = 1,
                            Field = "IT",
                            Name = "Reema Alyousef",
                            Phone = 547722199
                        },
                        new
                        {
                            Id = 7,
                            Email = "hala@gmail.com",
                            EventId = 2,
                            Field = "Business",
                            Name = "Hala Alyousef",
                            Phone = 554124771
                        },
                        new
                        {
                            Id = 4,
                            Email = "durrdurr@gmail.com",
                            EventId = 2,
                            Field = "Marketing",
                            Name = "Dorrah Alsaad",
                            Phone = 532121731
                        },
                        new
                        {
                            Id = 77,
                            Email = "toto@gmail.com",
                            EventId = 1,
                            Field = "IT",
                            Name = "Batool Alghamdi",
                            Phone = 554777892
                        },
                        new
                        {
                            Id = 12,
                            Email = "raneeeen@gmail.com",
                            EventId = 1,
                            Field = "IT",
                            Name = "Raneen Alzafrani",
                            Phone = 532120193
                        },
                        new
                        {
                            Id = 10,
                            Email = "spurofthemoment@gmail.com",
                            EventId = 1,
                            Field = "IT",
                            Name = "Sameera Alhussainy",
                            Phone = 556110112
                        },
                        new
                        {
                            Id = 407,
                            Email = "noura407@gmail.com",
                            EventId = 3,
                            Field = "Health",
                            Name = "Noura Aldossary",
                            Phone = 533172134
                        },
                        new
                        {
                            Id = 1,
                            Email = "njxx@gmail.com",
                            EventId = 3,
                            Field = "Health",
                            Name = "Nujood Alyousef",
                            Phone = 547712397
                        },
                        new
                        {
                            Id = 2,
                            Email = "lia@gmail.com",
                            EventId = 3,
                            Field = "Health",
                            Name = "Lama Alyousef",
                            Phone = 551212432
                        },
                        new
                        {
                            Id = 666,
                            Email = "waz@gmail.com",
                            EventId = 2,
                            Field = "Biology",
                            Name = "Wedad Alzamil",
                            Phone = 555612127
                        });
                });

            modelBuilder.Entity("Event_Hall.Models.EventModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Duration")
                        .HasColumnType("text");

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PresentorId")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HallId")
                        .IsUnique();

                    b.HasIndex("PresentorId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Event_Hall.Models.HallModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Avaliability")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Halls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avaliability = true,
                            Capacity = 50,
                            Name = "First Venue"
                        },
                        new
                        {
                            Id = 2,
                            Avaliability = false,
                            Capacity = 200,
                            Name = "Main Hall"
                        },
                        new
                        {
                            Id = 3,
                            Avaliability = true,
                            Capacity = 1000,
                            Name = "Conference Hall "
                        });
                });

            modelBuilder.Entity("Event_Hall.Models.PresentorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Field")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Presentors");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            Email = "spurofthemoment@gmail.com",
                            Field = "IT",
                            Name = "Sameera Alhussainy",
                            Phone = 556110112
                        },
                        new
                        {
                            Id = 2,
                            Email = "ceo@tesla.com",
                            Field = "Business",
                            Name = "Elon Musk",
                            Phone = 556123123
                        },
                        new
                        {
                            Id = 665,
                            Email = "mj@gmail.com",
                            Field = "Health",
                            Name = "Michael Jackson",
                            Phone = 522666987
                        },
                        new
                        {
                            Id = 1,
                            Email = "stephen@galaxybrain.com",
                            Field = "Science",
                            Name = "Stephen Hawking",
                            Phone = 522443298
                        });
                });

            modelBuilder.Entity("Event_Hall.Models.AttendeeModel", b =>
                {
                    b.HasOne("Event_Hall.Models.EventModel", "Event")
                        .WithMany("Attendees")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Event_Hall.Models.EventModel", b =>
                {
                    b.HasOne("Event_Hall.Models.HallModel", "Hall")
                        .WithOne("Event")
                        .HasForeignKey("Event_Hall.Models.EventModel", "HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Hall.Models.PresentorModel", "Presentor")
                        .WithMany("Events")
                        .HasForeignKey("PresentorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
